1684163367
waR3U4bTeM%3A9f7d9b242abfafdb64c2e1d7c32059b1-1e038a7f82d7c9d5d0642a2fc430cc88
s:36064:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"1e038a7f82d7c9d5d0642a2fc430cc88";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"hr.php";s:39:" phpDocumentor\Reflection\Php\File path";s:49:"vendor/symfony/intl/Resources/data/locales/hr.php";s:41:" phpDocumentor\Reflection\Php\File source";s:26125:"<?php

return [
    'Names' => [
        'af' => 'afrikaans',
        'af_NA' => 'afrikaans (Namibija)',
        'af_ZA' => 'afrikaans (Južnoafrička Republika)',
        'ak' => 'akanski',
        'ak_GH' => 'akanski (Gana)',
        'am' => 'amharski',
        'am_ET' => 'amharski (Etiopija)',
        'ar' => 'arapski',
        'ar_001' => 'arapski (Svijet)',
        'ar_AE' => 'arapski (Ujedinjeni Arapski Emirati)',
        'ar_BH' => 'arapski (Bahrein)',
        'ar_DJ' => 'arapski (Džibuti)',
        'ar_DZ' => 'arapski (Alžir)',
        'ar_EG' => 'arapski (Egipat)',
        'ar_EH' => 'arapski (Zapadna Sahara)',
        'ar_ER' => 'arapski (Eritreja)',
        'ar_IL' => 'arapski (Izrael)',
        'ar_IQ' => 'arapski (Irak)',
        'ar_JO' => 'arapski (Jordan)',
        'ar_KM' => 'arapski (Komori)',
        'ar_KW' => 'arapski (Kuvajt)',
        'ar_LB' => 'arapski (Libanon)',
        'ar_LY' => 'arapski (Libija)',
        'ar_MA' => 'arapski (Maroko)',
        'ar_MR' => 'arapski (Mauretanija)',
        'ar_OM' => 'arapski (Oman)',
        'ar_PS' => 'arapski (Palestinsko područje)',
        'ar_QA' => 'arapski (Katar)',
        'ar_SA' => 'arapski (Saudijska Arabija)',
        'ar_SD' => 'arapski (Sudan)',
        'ar_SO' => 'arapski (Somalija)',
        'ar_SS' => 'arapski (Južni Sudan)',
        'ar_SY' => 'arapski (Sirija)',
        'ar_TD' => 'arapski (Čad)',
        'ar_TN' => 'arapski (Tunis)',
        'ar_YE' => 'arapski (Jemen)',
        'as' => 'asamski',
        'as_IN' => 'asamski (Indija)',
        'az' => 'azerbajdžanski',
        'az_AZ' => 'azerbajdžanski (Azerbajdžan)',
        'az_Cyrl' => 'azerbajdžanski (ćirilica)',
        'az_Cyrl_AZ' => 'azerbajdžanski (ćirilica, Azerbajdžan)',
        'az_Latn' => 'azerbajdžanski (latinica)',
        'az_Latn_AZ' => 'azerbajdžanski (latinica, Azerbajdžan)',
        'be' => 'bjeloruski',
        'be_BY' => 'bjeloruski (Bjelorusija)',
        'bg' => 'bugarski',
        'bg_BG' => 'bugarski (Bugarska)',
        'bm' => 'bambara',
        'bm_ML' => 'bambara (Mali)',
        'bn' => 'bangla',
        'bn_BD' => 'bangla (Bangladeš)',
        'bn_IN' => 'bangla (Indija)',
        'bo' => 'tibetski',
        'bo_CN' => 'tibetski (Kina)',
        'bo_IN' => 'tibetski (Indija)',
        'br' => 'bretonski',
        'br_FR' => 'bretonski (Francuska)',
        'bs' => 'bosanski',
        'bs_BA' => 'bosanski (Bosna i Hercegovina)',
        'bs_Cyrl' => 'bosanski (ćirilica)',
        'bs_Cyrl_BA' => 'bosanski (ćirilica, Bosna i Hercegovina)',
        'bs_Latn' => 'bosanski (latinica)',
        'bs_Latn_BA' => 'bosanski (latinica, Bosna i Hercegovina)',
        'ca' => 'katalonski',
        'ca_AD' => 'katalonski (Andora)',
        'ca_ES' => 'katalonski (Španjolska)',
        'ca_FR' => 'katalonski (Francuska)',
        'ca_IT' => 'katalonski (Italija)',
        'ce' => 'čečenski',
        'ce_RU' => 'čečenski (Rusija)',
        'cs' => 'češki',
        'cs_CZ' => 'češki (Češka)',
        'cy' => 'velški',
        'cy_GB' => 'velški (Ujedinjeno Kraljevstvo)',
        'da' => 'danski',
        'da_DK' => 'danski (Danska)',
        'da_GL' => 'danski (Grenland)',
        'de' => 'njemački',
        'de_AT' => 'njemački (Austrija)',
        'de_BE' => 'njemački (Belgija)',
        'de_CH' => 'njemački (Švicarska)',
        'de_DE' => 'njemački (Njemačka)',
        'de_IT' => 'njemački (Italija)',
        'de_LI' => 'njemački (Lihtenštajn)',
        'de_LU' => 'njemački (Luksemburg)',
        'dz' => 'dzongkha',
        'dz_BT' => 'dzongkha (Butan)',
        'ee' => 'ewe',
        'ee_GH' => 'ewe (Gana)',
        'ee_TG' => 'ewe (Togo)',
        'el' => 'grčki',
        'el_CY' => 'grčki (Cipar)',
        'el_GR' => 'grčki (Grčka)',
        'en' => 'engleski',
        'en_001' => 'engleski (Svijet)',
        'en_150' => 'engleski (Europa)',
        'en_AE' => 'engleski (Ujedinjeni Arapski Emirati)',
        'en_AG' => 'engleski (Antigva i Barbuda)',
        'en_AI' => 'engleski (Angvila)',
        'en_AS' => 'engleski (Američka Samoa)',
        'en_AT' => 'engleski (Austrija)',
        'en_AU' => 'engleski (Australija)',
        'en_BB' => 'engleski (Barbados)',
        'en_BE' => 'engleski (Belgija)',
        'en_BI' => 'engleski (Burundi)',
        'en_BM' => 'engleski (Bermudi)',
        'en_BS' => 'engleski (Bahami)',
        'en_BW' => 'engleski (Bocvana)',
        'en_BZ' => 'engleski (Belize)',
        'en_CA' => 'engleski (Kanada)',
        'en_CC' => 'engleski (Kokosovi [Keelingovi] otoci)',
        'en_CH' => 'engleski (Švicarska)',
        'en_CK' => 'engleski (Cookovi Otoci)',
        'en_CM' => 'engleski (Kamerun)',
        'en_CX' => 'engleski (Božićni otok)',
        'en_CY' => 'engleski (Cipar)',
        'en_DE' => 'engleski (Njemačka)',
        'en_DK' => 'engleski (Danska)',
        'en_DM' => 'engleski (Dominika)',
        'en_ER' => 'engleski (Eritreja)',
        'en_FI' => 'engleski (Finska)',
        'en_FJ' => 'engleski (Fidži)',
        'en_FK' => 'engleski (Falklandski otoci)',
        'en_FM' => 'engleski (Mikronezija)',
        'en_GB' => 'engleski (Ujedinjeno Kraljevstvo)',
        'en_GD' => 'engleski (Grenada)',
        'en_GG' => 'engleski (Guernsey)',
        'en_GH' => 'engleski (Gana)',
        'en_GI' => 'engleski (Gibraltar)',
        'en_GM' => 'engleski (Gambija)',
        'en_GU' => 'engleski (Guam)',
        'en_GY' => 'engleski (Gvajana)',
        'en_HK' => 'engleski (PUP Hong Kong Kina)',
        'en_IE' => 'engleski (Irska)',
        'en_IL' => 'engleski (Izrael)',
        'en_IM' => 'engleski (Otok Man)',
        'en_IN' => 'engleski (Indija)',
        'en_IO' => 'engleski (Britanski Indijskooceanski teritorij)',
        'en_JE' => 'engleski (Jersey)',
        'en_JM' => 'engleski (Jamajka)',
        'en_KE' => 'engleski (Kenija)',
        'en_KI' => 'engleski (Kiribati)',
        'en_KN' => 'engleski (Sveti Kristofor i Nevis)',
        'en_KY' => 'engleski (Kajmanski otoci)',
        'en_LC' => 'engleski (Sveta Lucija)',
        'en_LR' => 'engleski (Liberija)',
        'en_LS' => 'engleski (Lesoto)',
        'en_MG' => 'engleski (Madagaskar)',
        'en_MH' => 'engleski (Maršalovi Otoci)',
        'en_MO' => 'engleski (PUP Makao Kina)',
        'en_MP' => 'engleski (Sjevernomarijanski otoci)',
        'en_MS' => 'engleski (Montserrat)',
        'en_MT' => 'engleski (Malta)',
        'en_MU' => 'engleski (Mauricijus)',
        'en_MV' => 'engleski (Maldivi)',
        'en_MW' => 'engleski (Malavi)',
        'en_MY' => 'engleski (Malezija)',
        'en_NA' => 'engleski (Namibija)',
        'en_NF' => 'engleski (Otok Norfolk)',
        'en_NG' => 'engleski (Nigerija)',
        'en_NL' => 'engleski (Nizozemska)',
        'en_NR' => 'engleski (Nauru)',
        'en_NU' => 'engleski (Niue)',
        'en_NZ' => 'engleski (Novi Zeland)',
        'en_PG' => 'engleski (Papua Nova Gvineja)',
        'en_PH' => 'engleski (Filipini)',
        'en_PK' => 'engleski (Pakistan)',
        'en_PN' => 'engleski (Otoci Pitcairn)',
        'en_PR' => 'engleski (Portoriko)',
        'en_PW' => 'engleski (Palau)',
        'en_RW' => 'engleski (Ruanda)',
        'en_SB' => 'engleski (Salomonski Otoci)',
        'en_SC' => 'engleski (Sejšeli)',
        'en_SD' => 'engleski (Sudan)',
        'en_SE' => 'engleski (Švedska)',
        'en_SG' => 'engleski (Singapur)',
        'en_SH' => 'engleski (Sveta Helena)',
        'en_SI' => 'engleski (Slovenija)',
        'en_SL' => 'engleski (Sijera Leone)',
        'en_SS' => 'engleski (Južni Sudan)',
        'en_SX' => 'engleski (Sint Maarten)',
        'en_SZ' => 'engleski (Esvatini)',
        'en_TC' => 'engleski (Otoci Turks i Caicos)',
        'en_TK' => 'engleski (Tokelau)',
        'en_TO' => 'engleski (Tonga)',
        'en_TT' => 'engleski (Trinidad i Tobago)',
        'en_TV' => 'engleski (Tuvalu)',
        'en_TZ' => 'engleski (Tanzanija)',
        'en_UG' => 'engleski (Uganda)',
        'en_UM' => 'engleski (Mali udaljeni otoci SAD-a)',
        'en_US' => 'engleski (Sjedinjene Američke Države)',
        'en_VC' => 'engleski (Sveti Vincent i Grenadini)',
        'en_VG' => 'engleski (Britanski Djevičanski otoci)',
        'en_VI' => 'engleski (Američki Djevičanski otoci)',
        'en_VU' => 'engleski (Vanuatu)',
        'en_WS' => 'engleski (Samoa)',
        'en_ZA' => 'engleski (Južnoafrička Republika)',
        'en_ZM' => 'engleski (Zambija)',
        'en_ZW' => 'engleski (Zimbabve)',
        'eo' => 'esperanto',
        'eo_001' => 'esperanto (Svijet)',
        'es' => 'španjolski',
        'es_419' => 'španjolski (Latinska Amerika)',
        'es_AR' => 'španjolski (Argentina)',
        'es_BO' => 'španjolski (Bolivija)',
        'es_BR' => 'španjolski (Brazil)',
        'es_BZ' => 'španjolski (Belize)',
        'es_CL' => 'španjolski (Čile)',
        'es_CO' => 'španjolski (Kolumbija)',
        'es_CR' => 'španjolski (Kostarika)',
        'es_CU' => 'španjolski (Kuba)',
        'es_DO' => 'španjolski (Dominikanska Republika)',
        'es_EC' => 'španjolski (Ekvador)',
        'es_ES' => 'španjolski (Španjolska)',
        'es_GQ' => 'španjolski (Ekvatorska Gvineja)',
        'es_GT' => 'španjolski (Gvatemala)',
        'es_HN' => 'španjolski (Honduras)',
        'es_MX' => 'španjolski (Meksiko)',
        'es_NI' => 'španjolski (Nikaragva)',
        'es_PA' => 'španjolski (Panama)',
        'es_PE' => 'španjolski (Peru)',
        'es_PH' => 'španjolski (Filipini)',
        'es_PR' => 'španjolski (Portoriko)',
        'es_PY' => 'španjolski (Paragvaj)',
        'es_SV' => 'španjolski (Salvador)',
        'es_US' => 'španjolski (Sjedinjene Američke Države)',
        'es_UY' => 'španjolski (Urugvaj)',
        'es_VE' => 'španjolski (Venezuela)',
        'et' => 'estonski',
        'et_EE' => 'estonski (Estonija)',
        'eu' => 'baskijski',
        'eu_ES' => 'baskijski (Španjolska)',
        'fa' => 'perzijski',
        'fa_AF' => 'perzijski (Afganistan)',
        'fa_IR' => 'perzijski (Iran)',
        'ff' => 'fula',
        'ff_CM' => 'fula (Kamerun)',
        'ff_GN' => 'fula (Gvineja)',
        'ff_Latn' => 'fula (latinica)',
        'ff_Latn_BF' => 'fula (latinica, Burkina Faso)',
        'ff_Latn_CM' => 'fula (latinica, Kamerun)',
        'ff_Latn_GH' => 'fula (latinica, Gana)',
        'ff_Latn_GM' => 'fula (latinica, Gambija)',
        'ff_Latn_GN' => 'fula (latinica, Gvineja)',
        'ff_Latn_GW' => 'fula (latinica, Gvineja Bisau)',
        'ff_Latn_LR' => 'fula (latinica, Liberija)',
        'ff_Latn_MR' => 'fula (latinica, Mauretanija)',
        'ff_Latn_NE' => 'fula (latinica, Niger)',
        'ff_Latn_NG' => 'fula (latinica, Nigerija)',
        'ff_Latn_SL' => 'fula (latinica, Sijera Leone)',
        'ff_Latn_SN' => 'fula (latinica, Senegal)',
        'ff_MR' => 'fula (Mauretanija)',
        'ff_SN' => 'fula (Senegal)',
        'fi' => 'finski',
        'fi_FI' => 'finski (Finska)',
        'fo' => 'ferojski',
        'fo_DK' => 'ferojski (Danska)',
        'fo_FO' => 'ferojski (Farski otoci)',
        'fr' => 'francuski',
        'fr_BE' => 'francuski (Belgija)',
        'fr_BF' => 'francuski (Burkina Faso)',
        'fr_BI' => 'francuski (Burundi)',
        'fr_BJ' => 'francuski (Benin)',
        'fr_BL' => 'francuski (Saint Barthélemy)',
        'fr_CA' => 'francuski (Kanada)',
        'fr_CD' => 'francuski (Kongo - Kinshasa)',
        'fr_CF' => 'francuski (Srednjoafrička Republika)',
        'fr_CG' => 'francuski (Kongo - Brazzaville)',
        'fr_CH' => 'francuski (Švicarska)',
        'fr_CI' => 'francuski (Obala Bjelokosti)',
        'fr_CM' => 'francuski (Kamerun)',
        'fr_DJ' => 'francuski (Džibuti)',
        'fr_DZ' => 'francuski (Alžir)',
        'fr_FR' => 'francuski (Francuska)',
        'fr_GA' => 'francuski (Gabon)',
        'fr_GF' => 'francuski (Francuska Gijana)',
        'fr_GN' => 'francuski (Gvineja)',
        'fr_GP' => 'francuski (Guadalupe)',
        'fr_GQ' => 'francuski (Ekvatorska Gvineja)',
        'fr_HT' => 'francuski (Haiti)',
        'fr_KM' => 'francuski (Komori)',
        'fr_LU' => 'francuski (Luksemburg)',
        'fr_MA' => 'francuski (Maroko)',
        'fr_MC' => 'francuski (Monako)',
        'fr_MF' => 'francuski (Saint Martin)',
        'fr_MG' => 'francuski (Madagaskar)',
        'fr_ML' => 'francuski (Mali)',
        'fr_MQ' => 'francuski (Martinique)',
        'fr_MR' => 'francuski (Mauretanija)',
        'fr_MU' => 'francuski (Mauricijus)',
        'fr_NC' => 'francuski (Nova Kaledonija)',
        'fr_NE' => 'francuski (Niger)',
        'fr_PF' => 'francuski (Francuska Polinezija)',
        'fr_PM' => 'francuski (Saint-Pierre-et-Miquelon)',
        'fr_RE' => 'francuski (Réunion)',
        'fr_RW' => 'francuski (Ruanda)',
        'fr_SC' => 'francuski (Sejšeli)',
        'fr_SN' => 'francuski (Senegal)',
        'fr_SY' => 'francuski (Sirija)',
        'fr_TD' => 'francuski (Čad)',
        'fr_TG' => 'francuski (Togo)',
        'fr_TN' => 'francuski (Tunis)',
        'fr_VU' => 'francuski (Vanuatu)',
        'fr_WF' => 'francuski (Wallis i Futuna)',
        'fr_YT' => 'francuski (Mayotte)',
        'fy' => 'zapadnofrizijski',
        'fy_NL' => 'zapadnofrizijski (Nizozemska)',
        'ga' => 'irski',
        'ga_GB' => 'irski (Ujedinjeno Kraljevstvo)',
        'ga_IE' => 'irski (Irska)',
        'gd' => 'škotski gaelski',
        'gd_GB' => 'škotski gaelski (Ujedinjeno Kraljevstvo)',
        'gl' => 'galicijski',
        'gl_ES' => 'galicijski (Španjolska)',
        'gu' => 'gudžaratski',
        'gu_IN' => 'gudžaratski (Indija)',
        'gv' => 'manski',
        'gv_IM' => 'manski (Otok Man)',
        'ha' => 'hausa',
        'ha_GH' => 'hausa (Gana)',
        'ha_NE' => 'hausa (Niger)',
        'ha_NG' => 'hausa (Nigerija)',
        'he' => 'hebrejski',
        'he_IL' => 'hebrejski (Izrael)',
        'hi' => 'hindski',
        'hi_IN' => 'hindski (Indija)',
        'hi_Latn' => 'hindski (latinica)',
        'hi_Latn_IN' => 'hindski (latinica, Indija)',
        'hr' => 'hrvatski',
        'hr_BA' => 'hrvatski (Bosna i Hercegovina)',
        'hr_HR' => 'hrvatski (Hrvatska)',
        'hu' => 'mađarski',
        'hu_HU' => 'mađarski (Mađarska)',
        'hy' => 'armenski',
        'hy_AM' => 'armenski (Armenija)',
        'ia' => 'interlingua',
        'ia_001' => 'interlingua (Svijet)',
        'id' => 'indonezijski',
        'id_ID' => 'indonezijski (Indonezija)',
        'ig' => 'igbo',
        'ig_NG' => 'igbo (Nigerija)',
        'ii' => 'sichuan ji',
        'ii_CN' => 'sichuan ji (Kina)',
        'is' => 'islandski',
        'is_IS' => 'islandski (Island)',
        'it' => 'talijanski',
        'it_CH' => 'talijanski (Švicarska)',
        'it_IT' => 'talijanski (Italija)',
        'it_SM' => 'talijanski (San Marino)',
        'it_VA' => 'talijanski (Vatikanski Grad)',
        'ja' => 'japanski',
        'ja_JP' => 'japanski (Japan)',
        'jv' => 'javanski',
        'jv_ID' => 'javanski (Indonezija)',
        'ka' => 'gruzijski',
        'ka_GE' => 'gruzijski (Gruzija)',
        'ki' => 'kikuyu',
        'ki_KE' => 'kikuyu (Kenija)',
        'kk' => 'kazaški',
        'kk_KZ' => 'kazaški (Kazahstan)',
        'kl' => 'kalaallisut',
        'kl_GL' => 'kalaallisut (Grenland)',
        'km' => 'kmerski',
        'km_KH' => 'kmerski (Kambodža)',
        'kn' => 'karnatački',
        'kn_IN' => 'karnatački (Indija)',
        'ko' => 'korejski',
        'ko_KP' => 'korejski (Sjeverna Koreja)',
        'ko_KR' => 'korejski (Južna Koreja)',
        'ks' => 'kašmirski',
        'ks_Arab' => 'kašmirski (arapsko pismo)',
        'ks_Arab_IN' => 'kašmirski (arapsko pismo, Indija)',
        'ks_Deva' => 'kašmirski (devangari pismo)',
        'ks_Deva_IN' => 'kašmirski (devangari pismo, Indija)',
        'ks_IN' => 'kašmirski (Indija)',
        'ku' => 'kurdski',
        'ku_TR' => 'kurdski (Turska)',
        'kw' => 'kornski',
        'kw_GB' => 'kornski (Ujedinjeno Kraljevstvo)',
        'ky' => 'kirgiski',
        'ky_KG' => 'kirgiski (Kirgistan)',
        'lb' => 'luksemburški',
        'lb_LU' => 'luksemburški (Luksemburg)',
        'lg' => 'ganda',
        'lg_UG' => 'ganda (Uganda)',
        'ln' => 'lingala',
        'ln_AO' => 'lingala (Angola)',
        'ln_CD' => 'lingala (Kongo - Kinshasa)',
        'ln_CF' => 'lingala (Srednjoafrička Republika)',
        'ln_CG' => 'lingala (Kongo - Brazzaville)',
        'lo' => 'laoski',
        'lo_LA' => 'laoski (Laos)',
        'lt' => 'litavski',
        'lt_LT' => 'litavski (Litva)',
        'lu' => 'luba-katanga',
        'lu_CD' => 'luba-katanga (Kongo - Kinshasa)',
        'lv' => 'latvijski',
        'lv_LV' => 'latvijski (Latvija)',
        'mg' => 'malgaški',
        'mg_MG' => 'malgaški (Madagaskar)',
        'mi' => 'maorski',
        'mi_NZ' => 'maorski (Novi Zeland)',
        'mk' => 'makedonski',
        'mk_MK' => 'makedonski (Sjeverna Makedonija)',
        'ml' => 'malajalamski',
        'ml_IN' => 'malajalamski (Indija)',
        'mn' => 'mongolski',
        'mn_MN' => 'mongolski (Mongolija)',
        'mr' => 'marathski',
        'mr_IN' => 'marathski (Indija)',
        'ms' => 'malajski',
        'ms_BN' => 'malajski (Brunej)',
        'ms_ID' => 'malajski (Indonezija)',
        'ms_MY' => 'malajski (Malezija)',
        'ms_SG' => 'malajski (Singapur)',
        'mt' => 'malteški',
        'mt_MT' => 'malteški (Malta)',
        'my' => 'burmanski',
        'my_MM' => 'burmanski (Mjanmar [Burma])',
        'nb' => 'norveški bokmål',
        'nb_NO' => 'norveški bokmål (Norveška)',
        'nb_SJ' => 'norveški bokmål (Svalbard i Jan Mayen)',
        'nd' => 'sjeverni ndebele',
        'nd_ZW' => 'sjeverni ndebele (Zimbabve)',
        'ne' => 'nepalski',
        'ne_IN' => 'nepalski (Indija)',
        'ne_NP' => 'nepalski (Nepal)',
        'nl' => 'nizozemski',
        'nl_AW' => 'nizozemski (Aruba)',
        'nl_BE' => 'nizozemski (Belgija)',
        'nl_BQ' => 'nizozemski (Karipski otoci Nizozemske)',
        'nl_CW' => 'nizozemski (Curaçao)',
        'nl_NL' => 'nizozemski (Nizozemska)',
        'nl_SR' => 'nizozemski (Surinam)',
        'nl_SX' => 'nizozemski (Sint Maarten)',
        'nn' => 'norveški nynorsk',
        'nn_NO' => 'norveški nynorsk (Norveška)',
        'no' => 'norveški',
        'no_NO' => 'norveški (Norveška)',
        'om' => 'oromski',
        'om_ET' => 'oromski (Etiopija)',
        'om_KE' => 'oromski (Kenija)',
        'or' => 'orijski',
        'or_IN' => 'orijski (Indija)',
        'os' => 'osetski',
        'os_GE' => 'osetski (Gruzija)',
        'os_RU' => 'osetski (Rusija)',
        'pa' => 'pandžapski',
        'pa_Arab' => 'pandžapski (arapsko pismo)',
        'pa_Arab_PK' => 'pandžapski (arapsko pismo, Pakistan)',
        'pa_Guru' => 'pandžapski (gurmukhi pismo)',
        'pa_Guru_IN' => 'pandžapski (gurmukhi pismo, Indija)',
        'pa_IN' => 'pandžapski (Indija)',
        'pa_PK' => 'pandžapski (Pakistan)',
        'pl' => 'poljski',
        'pl_PL' => 'poljski (Poljska)',
        'ps' => 'paštunski',
        'ps_AF' => 'paštunski (Afganistan)',
        'ps_PK' => 'paštunski (Pakistan)',
        'pt' => 'portugalski',
        'pt_AO' => 'portugalski (Angola)',
        'pt_BR' => 'portugalski (Brazil)',
        'pt_CH' => 'portugalski (Švicarska)',
        'pt_CV' => 'portugalski (Zelenortska Republika)',
        'pt_GQ' => 'portugalski (Ekvatorska Gvineja)',
        'pt_GW' => 'portugalski (Gvineja Bisau)',
        'pt_LU' => 'portugalski (Luksemburg)',
        'pt_MO' => 'portugalski (PUP Makao Kina)',
        'pt_MZ' => 'portugalski (Mozambik)',
        'pt_PT' => 'portugalski (Portugal)',
        'pt_ST' => 'portugalski (Sveti Toma i Princip)',
        'pt_TL' => 'portugalski (Timor-Leste)',
        'qu' => 'kečuanski',
        'qu_BO' => 'kečuanski (Bolivija)',
        'qu_EC' => 'kečuanski (Ekvador)',
        'qu_PE' => 'kečuanski (Peru)',
        'rm' => 'retoromanski',
        'rm_CH' => 'retoromanski (Švicarska)',
        'rn' => 'rundi',
        'rn_BI' => 'rundi (Burundi)',
        'ro' => 'rumunjski',
        'ro_MD' => 'rumunjski (Moldavija)',
        'ro_RO' => 'rumunjski (Rumunjska)',
        'ru' => 'ruski',
        'ru_BY' => 'ruski (Bjelorusija)',
        'ru_KG' => 'ruski (Kirgistan)',
        'ru_KZ' => 'ruski (Kazahstan)',
        'ru_MD' => 'ruski (Moldavija)',
        'ru_RU' => 'ruski (Rusija)',
        'ru_UA' => 'ruski (Ukrajina)',
        'rw' => 'kinyarwanda',
        'rw_RW' => 'kinyarwanda (Ruanda)',
        'sa' => 'sanskrtski',
        'sa_IN' => 'sanskrtski (Indija)',
        'sc' => 'sardski',
        'sc_IT' => 'sardski (Italija)',
        'sd' => 'sindski',
        'sd_Arab' => 'sindski (arapsko pismo)',
        'sd_Arab_PK' => 'sindski (arapsko pismo, Pakistan)',
        'sd_Deva' => 'sindski (devangari pismo)',
        'sd_Deva_IN' => 'sindski (devangari pismo, Indija)',
        'sd_PK' => 'sindski (Pakistan)',
        'se' => 'sjeverni sami',
        'se_FI' => 'sjeverni sami (Finska)',
        'se_NO' => 'sjeverni sami (Norveška)',
        'se_SE' => 'sjeverni sami (Švedska)',
        'sg' => 'sango',
        'sg_CF' => 'sango (Srednjoafrička Republika)',
        'sh' => 'srpsko-hrvatski',
        'sh_BA' => 'srpsko-hrvatski (Bosna i Hercegovina)',
        'si' => 'sinhaleški',
        'si_LK' => 'sinhaleški (Šri Lanka)',
        'sk' => 'slovački',
        'sk_SK' => 'slovački (Slovačka)',
        'sl' => 'slovenski',
        'sl_SI' => 'slovenski (Slovenija)',
        'sn' => 'shona',
        'sn_ZW' => 'shona (Zimbabve)',
        'so' => 'somalski',
        'so_DJ' => 'somalski (Džibuti)',
        'so_ET' => 'somalski (Etiopija)',
        'so_KE' => 'somalski (Kenija)',
        'so_SO' => 'somalski (Somalija)',
        'sq' => 'albanski',
        'sq_AL' => 'albanski (Albanija)',
        'sq_MK' => 'albanski (Sjeverna Makedonija)',
        'sr' => 'srpski',
        'sr_BA' => 'srpski (Bosna i Hercegovina)',
        'sr_Cyrl' => 'srpski (ćirilica)',
        'sr_Cyrl_BA' => 'srpski (ćirilica, Bosna i Hercegovina)',
        'sr_Cyrl_ME' => 'srpski (ćirilica, Crna Gora)',
        'sr_Cyrl_RS' => 'srpski (ćirilica, Srbija)',
        'sr_Latn' => 'srpski (latinica)',
        'sr_Latn_BA' => 'srpski (latinica, Bosna i Hercegovina)',
        'sr_Latn_ME' => 'srpski (latinica, Crna Gora)',
        'sr_Latn_RS' => 'srpski (latinica, Srbija)',
        'sr_ME' => 'srpski (Crna Gora)',
        'sr_RS' => 'srpski (Srbija)',
        'su' => 'sundanski',
        'su_ID' => 'sundanski (Indonezija)',
        'su_Latn' => 'sundanski (latinica)',
        'su_Latn_ID' => 'sundanski (latinica, Indonezija)',
        'sv' => 'švedski',
        'sv_AX' => 'švedski (Ålandski otoci)',
        'sv_FI' => 'švedski (Finska)',
        'sv_SE' => 'švedski (Švedska)',
        'sw' => 'svahili',
        'sw_CD' => 'svahili (Kongo - Kinshasa)',
        'sw_KE' => 'svahili (Kenija)',
        'sw_TZ' => 'svahili (Tanzanija)',
        'sw_UG' => 'svahili (Uganda)',
        'ta' => 'tamilski',
        'ta_IN' => 'tamilski (Indija)',
        'ta_LK' => 'tamilski (Šri Lanka)',
        'ta_MY' => 'tamilski (Malezija)',
        'ta_SG' => 'tamilski (Singapur)',
        'te' => 'teluški',
        'te_IN' => 'teluški (Indija)',
        'tg' => 'tadžički',
        'tg_TJ' => 'tadžički (Tadžikistan)',
        'th' => 'tajlandski',
        'th_TH' => 'tajlandski (Tajland)',
        'ti' => 'tigrinja',
        'ti_ER' => 'tigrinja (Eritreja)',
        'ti_ET' => 'tigrinja (Etiopija)',
        'tk' => 'turkmenski',
        'tk_TM' => 'turkmenski (Turkmenistan)',
        'tl' => 'tagalog',
        'tl_PH' => 'tagalog (Filipini)',
        'to' => 'tonganski',
        'to_TO' => 'tonganski (Tonga)',
        'tr' => 'turski',
        'tr_CY' => 'turski (Cipar)',
        'tr_TR' => 'turski (Turska)',
        'tt' => 'tatarski',
        'tt_RU' => 'tatarski (Rusija)',
        'ug' => 'ujgurski',
        'ug_CN' => 'ujgurski (Kina)',
        'uk' => 'ukrajinski',
        'uk_UA' => 'ukrajinski (Ukrajina)',
        'ur' => 'urdski',
        'ur_IN' => 'urdski (Indija)',
        'ur_PK' => 'urdski (Pakistan)',
        'uz' => 'uzbečki',
        'uz_AF' => 'uzbečki (Afganistan)',
        'uz_Arab' => 'uzbečki (arapsko pismo)',
        'uz_Arab_AF' => 'uzbečki (arapsko pismo, Afganistan)',
        'uz_Cyrl' => 'uzbečki (ćirilica)',
        'uz_Cyrl_UZ' => 'uzbečki (ćirilica, Uzbekistan)',
        'uz_Latn' => 'uzbečki (latinica)',
        'uz_Latn_UZ' => 'uzbečki (latinica, Uzbekistan)',
        'uz_UZ' => 'uzbečki (Uzbekistan)',
        'vi' => 'vijetnamski',
        'vi_VN' => 'vijetnamski (Vijetnam)',
        'wo' => 'volof',
        'wo_SN' => 'volof (Senegal)',
        'xh' => 'xhosa',
        'xh_ZA' => 'xhosa (Južnoafrička Republika)',
        'yi' => 'jidiš',
        'yi_001' => 'jidiš (Svijet)',
        'yo' => 'jorupski',
        'yo_BJ' => 'jorupski (Benin)',
        'yo_NG' => 'jorupski (Nigerija)',
        'zh' => 'kineski',
        'zh_CN' => 'kineski (Kina)',
        'zh_HK' => 'kineski (PUP Hong Kong Kina)',
        'zh_Hans' => 'kineski (pojednostavljeno pismo)',
        'zh_Hans_CN' => 'kineski (pojednostavljeno pismo, Kina)',
        'zh_Hans_HK' => 'kineski (pojednostavljeno pismo, PUP Hong Kong Kina)',
        'zh_Hans_MO' => 'kineski (pojednostavljeno pismo, PUP Makao Kina)',
        'zh_Hans_SG' => 'kineski (pojednostavljeno pismo, Singapur)',
        'zh_Hant' => 'kineski (tradicionalno pismo)',
        'zh_Hant_HK' => 'kineski (tradicionalno pismo, PUP Hong Kong Kina)',
        'zh_Hant_MO' => 'kineski (tradicionalno pismo, PUP Makao Kina)',
        'zh_Hant_TW' => 'kineski (tradicionalno pismo, Tajvan)',
        'zh_MO' => 'kineski (PUP Makao Kina)',
        'zh_SG' => 'kineski (Singapur)',
        'zh_TW' => 'kineski (Tajvan)',
        'zu' => 'zulu',
        'zu_ZA' => 'zulu (Južnoafrička Republika)',
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";